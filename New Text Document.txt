Microsoft Windows [Version 10.0.19045.3086]
(c) Microsoft Corporation. All rights reserved.

D:\New folder>git init
Initialized empty Git repository in D:/New folder/.git/

D:\New folder>git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--config-env=<name>=<envvar>] <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

D:\New folder>git add .

D:\New folder>git commit -m "Initial Commit"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Aqdus@DESKTOP-DOJOCOR.(none)')

D:\New folder>git config --globle user.email "aqdusmalik070@gmail.com"
error: unknown option `globle'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


D:\New folder>git config --global user.email "aqdusmalik070@gmail.com"

D:\New folder>git config --global user.name "Aqdus"

D:\New folder>git add file 1.txt
fatal: pathspec 'file' did not match any files

D:\New folder>git add File 1.txt
fatal: pathspec 'File' did not match any files

D:\New folder>git add file1.txt
fatal: pathspec 'file1.txt' did not match any files

D:\New folder>git add file1.txt

D:\New folder>git add file2.txt

D:\New folder>git add file3.txt

D:\New folder>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Test.txt
        new file:   file1.txt
        new file:   file2.txt
        new file:   file3.txt


D:\New folder>git reset

D:\New folder>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Test.txt
        file1.txt
        file2.txt
        file3.txt

nothing added to commit but untracked files present (use "git add" to track)

D:\New folder>git add file1.txt

D:\New folder>git commit -m "Committing File 1"
[master (root-commit) 392389e] Committing File 1
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file1.txt

D:\New folder>git log
commit 392389ec025383fc64b196f4e6f348423e0fcabd (HEAD -> master)
Author: Aqdus <aqdusmalik070@gmail.com>
Date:   Fri Jun 16 07:40:31 2023 -0700

    Committing File 1

D:\New folder>git log --oneline
392389e (HEAD -> master) Committing File 1

D:\New folder>

D:\New folder>